name: cd-lambda-default

on:
  workflow_call:
    inputs:
      function-name:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: ./api/${{inputs.function-name}}
        env:
          IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ inputs.function-name }}
        run: |
          docker build \
          -t ${{env.IMAGE}} .
          docker push ${{env.IMAGE}}
          echo "::set-output name=image::${{env.IMAGE}}"

      - name: Deploy function
        run: |
          aws lambda update-function-code \
          --function-name ${{ inputs.function-name }} \
          --image-uri ${{ steps.build-image.outputs.image }}

      - name: Configure function
        run: |
          aws lambda wait function-updated --function-name ${{ inputs.function-name }}
          aws lambda update-function-configuration \
          --function-name ${{ inputs.function-name }} \
          --timeout 600

      - name: Publish new function version
        run: |
          aws lambda wait function-updated --function-name ${{ inputs.function-name }}
          aws lambda publish-version --function-name ${{ inputs.function-name }} --description "${{ github.event.head_commit.message }}"
          echo "::set-output name=version::$(aws lambda get-function --function-name ${{ inputs.function-name }} --query Version --output text)"